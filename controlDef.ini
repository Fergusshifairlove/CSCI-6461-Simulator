{
	MAR_load
	MBR_load
	IR_load
	MAR_take_EA
	MAR_take_MBR
	GPRF_load
	IRF_load
	PC_load
	MBR_take_GPRF
	MBR_take_IRF
	memory_load
	GPRF_take_EA
	GPRF_take_ALU
	CC_load
	ALU_op1_negate
}
{
	INITIALIZED				: FETCH_PC_TO_MAR
	FETCH_PC_TO_MAR			: FETCH_MEMORY_ACCESS
	FETCH_MEMORY_ACCESS		: FETCH_MBR_TO_IR
	FETCH_MBR_TO_IR			: DECODE
	DECODE 					: {
		0					: HALT						# HLT
		{
			1				# LDR
			65				# LDR, Indirect.
			2				# STR
			66				# STR, Indirect.
			67				# LDA, Indirect. Noticed that it shares the same path as LDR.
			33				# LDX
			97				# LDX, Indirect.
			34				# STX
			98				# STX, Indirect.
			4				# AMR
			68				# AMR, Indirect.
			5				# SMR
			69				# SMR, Indirect.
		}					: EA_TO_MAR					
		3					: EA_TO_REGISTER			# LDA
	}
	EA_TO_MAR				: {
		{
			1				# LDR
			67				# LDA, Indirect.
			33				# LDX
			4				# AMR
			5				# SMR
		}					: MEMORY_ACCESS	
		{
			65				# LDR, Indirect.
			66				# STR, Indirect.
			97				# LDX, Indirect.
			98				# STX, Indirect.
			68				# AMR, Indirect.
			69				# SMR, Indirect.
		}					: PRE_MEMORY_ACCESS			
		2					: GPRF_TO_MBR				# STR	
		34					: IRF_TO_MBR				# STX
	}
	PRE_MEMORY_ACCESS		: MBR_TO_MAR
	MEMORY_ACCESS			: {
		{
			1				# LDR
			65				# LDR, Indirect.
			67				# LDA, Indirect.
		}					: MBR_TO_GPRF
		{
			66				# STR, Indirect.
			2				# STR
			34				# STX
		}					: UPDATE_PC	
		{
			33				# LDX
			97				# LDX, Indirect.
		}					: MBR_TO_IRF
		{
			4				# AMR
			68				# AMR, Indirect.
		}					: ADD_TO_REGISTER
		{
			5				# SMR
			69				# SMR, Indirect.
		}					: SUB_TO_REGISTER
	}
	MBR_TO_MAR				: {
		{
			65				# LDR, Indirect.
			97				# LDX, Indirect.
			68				# AMR, Indirect.
			69				# SMR, Indirect.
		}					: MEMORY_ACCESS	
		66					: GPRF_TO_MBR				# STR, Indirect.
		98					: IRF_TO_MBR				# STX, Indirect.
	}
	{
		GPRF_TO_MBR	
		IRF_TO_MBR				
	}						: MEMORY_WRITE
	UPDATE_PC				: FETCH_PC_TO_MAR
	{
		MBR_TO_GPRF
		EA_TO_REGISTER
		MBR_TO_IRF
		MEMORY_WRITE
		ADD_TO_REGISTER
		SUB_TO_REGISTER
	}						: UPDATE_PC
}
{
	FETCH_PC_TO_MAR 		: MAR_load
	FETCH_MEMORY_ACCESS 	: MBR_load
	FETCH_MBR_TO_IR			: IR_load
	EA_TO_MAR				: MAR_take_EA, MAR_load
	MEMORY_ACCESS	 		: MBR_load
	PRE_MEMORY_ACCESS		: MBR_load
	MEMORY_WRITE			: memory_load
	MBR_TO_MAR				: MAR_take_MBR, MAR_load
	MBR_TO_GPRF				: GPRF_load
	MBR_TO_IRF			 	: IRF_load
	EA_TO_REGISTER 			: GPRF_take_EA, GPRF_load
	GPRF_TO_MBR			 	: MBR_take_GPRF, MBR_load
	IRF_TO_MBR				: MBR_take_IRF, MBR_load
	ADD_TO_REGISTER			: GPRF_take_ALU, GPRF_load, CC_load
	SUB_TO_REGISTER			: GPRF_take_ALU, GPRF_load, CC_load, ALU_op1_negate
	UPDATE_PC			 	: PC_load
}