{
	PC_load
	PC_output
	MAR_load
	MBR_input_sel
	memory_read
	memory_load
	MBR_output
	IR_load
	EA_Gate
	GPRF_load
	GPRF_output
	IRF_load
	IRF_only
}
{
	INITIALIZED				: FETCH_PC_TO_MAR
	FETCH_PC_TO_MAR			: FETCH_MEMORY_ACCESS
	FETCH_MEMORY_ACCESS		: FETCH_MBR_TO_IR
	FETCH_MBR_TO_IR			: DECODE
	DECODE : 
	{
		0					: HALT						# HLT
		1					: LDR_PUT_EA_TO_MAR			# LDR
		2					: STR_PUT_EA_TO_MAR			# STR
		3					: LDA_PUT_EA_TO_REGISTER	# LDA
		33					: LDX_PUT_EA_TO_MAR			# LDX
		34					: STX_PUT_EA_TO_MAR			# STX
	}
	LDR_PUT_EA_TO_MAR		: LDR_MEMORY_ACCESS
	LDR_MEMORY_ACCESS		: LDR_MBR_TO_REGISTER
	STR_PUT_EA_TO_MAR		: STR_REGISTER_TO_MBR
	STR_REGISTER_TO_MBR 	: STR_MEMORY_ACCESS
	LDX_PUT_EA_TO_MAR		: LDX_MEMORY_ACCESS
	LDX_MEMORY_ACCESS		: LDX_MBR_TO_REGISTER
	STX_PUT_EA_TO_MAR		: STX_REGISTER_TO_MBR
	STX_REGISTER_TO_MBR		: STX_MEMORY_ACCESS
	UPDATE_PC				: FETCH_PC_TO_MAR
	{
		LDR_MBR_TO_REGISTER
		STR_MEMORY_ACCESS
		LDA_PUT_EA_TO_REGISTER
		LDX_MBR_TO_REGISTER
		STX_MEMORY_ACCESS
	}						: UPDATE_PC
}
{
	FETCH_PC_TO_MAR 		: PC_output, MAR_load
	FETCH_MEMORY_ACCESS 	: memory_read
	FETCH_MBR_TO_IR			: MBR_output, IR_load
	LDR_PUT_EA_TO_MAR 		: EA_Gate, MAR_load
	LDR_MEMORY_ACCESS	 	: memory_read
	LDR_MBR_TO_REGISTER		: MBR_output, GPRF_load
	STR_PUT_EA_TO_MAR 		: EA_Gate, MAR_load
	STR_REGISTER_TO_MBR 	: memory_read, GPRF_output, MBR_input_sel
	STR_MEMORY_ACCESS	 	: memory_load
	LDA_PUT_EA_TO_REGISTER 	: EA_Gate, GPRF_load
	LDX_PUT_EA_TO_MAR	 	: EA_Gate, MAR_load
	LDX_MEMORY_ACCESS	 	: memory_read
	LDX_MBR_TO_REGISTER 	: MBR_output, IRF_load
	STX_PUT_EA_TO_MAR	 	: EA_Gate, MAR_load
	STX_REGISTER_TO_MBR		: memory_read, IRF_only, MBR_input_sel
	STX_MEMORY_ACCESS	 	: memory_load
	UPDATE_PC			 	: PC_load
}