{
	memory						: Memory
	CU							: ControlUnit
	decoder						: InstructionDecoder
	IR							: ClockRegister			, 16
	MAR							: ClockRegister			, 12
	MBR							: ClockRegister			, 16
	MBR_input_mux				: Mux 					, 1 	, 16
	MBR_Gate					: Gate 					, 16
	PC							: ClockRegister			, 12
	PC_Gate						: Gate 					, 12
	EA_Gate						: Gate 					, 16
	GeneralPurposeRegisterFile	: RegisterFile 			, 2		, 16
	IndexRegisterFile			: RegisterFile 			, 2		, 16
	address_adder				: Adder 				, 16
	address_adder_operand_1_mux	: Mux 					, 1 	, 5
	GPRF_Gate					: Gate 					, 16
	PC_Adder					: Adder 				, 12
	Constant_one				: ConstantChip 			, 1 	, 1
	Constant_zero				: ConstantChip 			, 1
	pauseCUSwitch				: Switch
	panelSwitchSet				: SwitchesSet			, 16
	panelValueBulbSet			: BulbSet				, 16
	panelAddressBulbSet			: BulbSet				, 12 
	destSelectSwitch			: NumberedSwitch		, 2
}
{
	panelSwitchSet.output-panelValueBulbSet.input
	IR.input 
		- MBR_Gate.output 
		- MBR_input_mux.input1
		- GeneralPurposeRegisterFile.input
		- GPRF_Gate.output
		- EA_Gate.output
		- MAR.input[0:11]
		- IndexRegisterFile.input
		- PC_Gate.output : bus

	CU.opcode - decoder.opcode[0:5] - decoder.I[0, 6] : watching
	CU.PC_output - PC_Gate.transfer
	CU.PC_load - PC.load
	CU.MAR_load - MAR.load
	CU.MBR_input_sel - MBR_input_mux.sel
	CU.memory_read - MBR.load
	CU.memory_load - memory.load
	CU.MBR_output - MBR_Gate.transfer
	CU.IR_load - IR.load
	CU.EA_Gate - EA_Gate.transfer
	CU.GPRF_load - GeneralPurposeRegisterFile.load
	CU.GPRF_output - GPRF_Gate.transfer
	CU.IRF_load - IndexRegisterFile.load
	CU.IRF_only - address_adder_operand_1_mux.sel
	
	decoder.input - IR.output
	decoder.R - GeneralPurposeRegisterFile.address 
	decoder.IX - IndexRegisterFile.address
	
	PC_Gate.input - PC.output - PC_Adder.operand1
	PC_Adder.operand2 - Constant_one.output
	PC.input - PC_Adder.result
	memory.address - MAR.output
	memory.output - MBR_input_mux.input0
	MBR_input_mux.output - MBR.input
	MBR_Gate.input - MBR.output - memory.input
	GPRF_Gate.input - GeneralPurposeRegisterFile.output
	address_adder.operand1 - address_adder_operand_1_mux.output
	address_adder_operand_1_mux.input0 - decoder.address
	address_adder.operand2 - IndexRegisterFile.output
	EA_Gate.input - address_adder.result
}