{
	Port1
	Port2
	...
	PortN
}
{
	BaseState : TargetState
	BaseState : {
		opcode : TargetState
		opcode : TargetState
		{
			opcode
			opcode
			opcode
		} : TargetState
	}
	BaseState : {
		opcode : TargetState
		DefaultTargetState(must be last one.)
	}
	{
		BaseState1
		BaseState2
	} : TargetState
}
{
	State : Port[, Port...]
}

BNF:
control_unit_definition_format	<- ports_definition state_convert_rules state_ports_mapping

ports_definition				<- { ports_definitions }
ports_definitions				<- NULL
ports_definitions				<- ports_definitions WORD

state_convert_rules				<- { state_convert_rule_entries }
state_convert_rule_entries		<- NULL
state_convert_rule_entries		<- state_convert_rule_entries state_convert_rule_entry

state_convert_rule_entry		<- start_state : convert_rule
start_state						<- WORD
start_state						<- { start_states }
start_states					<- NULL
start_states					<- start_states WORD

convert_rule					<- WORD
convert_rule					<- { convert_rule_cases default_case }

convert_rule_cases				<- NUMBER : WORD
convert_rule_cases				<- { rule_opcode_cases } : WORD

rule_opcode_cases				<- NUMBER
rule_opcode_cases				<- rule_opcode_cases NUMBER

default_case					<- NULL
default_case					<- WORD

state_ports_mapping				<- WORD : WORD other_ports
other_ports						<- NULL
other_ports						<- other_ports , WORD